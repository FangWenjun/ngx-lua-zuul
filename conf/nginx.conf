#user  nobody;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    ##lua 代码路径, 
    lua_package_path "/Users/tietang/nginx/nginx/lua/lib/?.lua;;";
    ##一些共享缓存
    lua_shared_dict discovery 10m;

    lua_shared_dict apps_count 1m;
    lua_shared_dict apps_res_time 10m;
    lua_shared_dict api_count 10m;
    lua_shared_dict api_res_time 10m;
    lua_shared_dict metrics 10m;
    lua_shared_dict metrics_time 10m;

    ##初始化
    init_by_lua '
        discovery = require "discovery"
        json=require "cjson"
        balancer=require "robin"
        router = require "router"

        rateLimiter = require "LeakyBucket"
        local config = {
            default = {
                maxRequests = 10, -- 单位时间窗口的最大请求数,默认10k
                windowSeconds = 1, -- 时间窗口,单位s 1~60s
                maxSaveSize = 60
             }
        }
        rateLimiter:init(ngx.shared.metrics,config)

    ';
    ## 初始化定时器
    init_worker_by_lua '
        discovery:init("http://172.16.1.248:8761/eureka/")
        discovery:schedule()
    ';

    server {
        listen       8000;
        server_name  localhost;

        #charset koi8-r;
         
        #access_log  logs/host.access.log  main;

        location = / {
            set $dir $document_root;
            root   $dir/html;
            index  index.html index.htm;
        }

        # Dashboard路径
        location ^~ /_dashboard {
            set $dir "./html";

            # root   $dir/html/;
            alias $dir;
            index  index.html index.htm;

             
        }
        # 静态文件路径
        location ^~ /public/ {
            set $dir "./html/public/";
            alias $dir;
        }
        # 一些管理功能-例子统计
        location = /_admin/stats {
            default_type text/html; 
            ## 这里使用了相对路径，相对于nginx安装目录
            content_by_lua_file lua/lib/stats_show.lua;
        }

        location = /_admin/stats.json {
             default_type application/json;
             content_by_lua_file lua/lib/stats_show_json.lua;
        }

        location = /_admin/data.json {
             default_type application/json;
             content_by_lua '
                local v={}
                v.date=ngx.now()*1000
                -- string.gsub(ngx.localtime()," ",":")
                v.close=math.random(2,100) 

                ngx.say( json.encode(v)) 

             ';
        }

        location = /_admin/data.tsv {
             default_type application/json;
             content_by_lua '
                ngx.say("date   close")
                ngx.say(string.gsub(ngx.localtime()," ",":") .. "    ".. math.random(20,600) )

             ';
        }

        ## 服务路由，负载均衡，请求转发处理
        location / {

            set $bk_host '';


            # default_type text/html;
            # 路由，负载均衡计算
            access_by_lua_file lua/lib/app_route.lua;


            
            proxy_set_header Host   $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_pass http://$bk_host;
            # 简单统计收集
            log_by_lua_file lua/lib/stats.lua;
            #
        }


        #用于调试的例子
        location = /haha {

            default_type application/json;
            # access_by_lua_file demo/demo.lua;
           content_by_lua '
                ngx.say(ngx.var.host)
                ngx.say(ngx.time())
                ngx.say(ngx.now())
                ngx.say( json.encode(router.routingTable) .."<br/>")
                 ngx.say(  "<br/>")
                ngx.say(json.encode(discovery.hosts ) .."<br/>")

            ';
            #
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
